# colors
set-option -sa terminal-overrides ",xterm*:Tc"

set -g mouse on

unbind-key C-b
set-option -g prefix C-f

bind '|' split-window -h # Split panes horizontal
bind '-' split-window -v # Split panes vertically
bind q detach-client # Detach from session


# When splitting panes, maintain the current path
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Hook to capture SSH sessions
set-hook -g after-split-window 'if-shell "ps -o state= -o comm= -t \"#{pane_tty}\" | grep -iqE \"^[^TXZ ]+ +(\\S+\\/)?ssh$\"" "send-keys \"$(ps -t #{pane_tty} -o command= | grep ssh)\" Enter"'

# Start window and panes index at 1 not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on


# Custom window format to show running command
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{pane_current_command}'

# Define a clean, minimal status line with Rose Pine colors
set -g status on
set -g status-style "bg=default"

# Remove all window styling
set -g window-status-style "bg=default"
set -g window-status-current-style "bg=default"

# Window status format (tabs) - super minimal with no highlighting
set -g window-status-current-format "#[fg=#f6c177,bold]#I #[fg=#ebbcba,bold]#W"
set -g window-status-format "#[fg=#6e6a86,nobold]#I #[fg=#908caa,nobold]#W"
set -g window-status-separator "   "

# Center the window list
set -g status-justify centre

# Empty left status
set -g status-left ""
set -g status-left-length 0

# Show only time in right status
set -g status-right "#[fg=#ebbcba,bg=default]%H:%M "
set -g status-right-length 10


# Smart pane switching with awareness of Vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\' 'select-pane -l'

# Restore clear screen functionality with prefix + C-l
bind C-l send-keys 'C-l'

# Make sure TPM's key binding works
unbind I

# Setup TPM
set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.tmux/plugins/"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
# Plugin specific configurations
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# Key bindings for tmux-sessionizer
bind C-o display-popup -E -w80% -h80% "tms"
bind C-j display-popup -E -w80% -h80% "tms switch" 
bind C-p display-popup -E -w80% -h80% "tms windows"

# Plugin usage:
# resurrect: prefix + Ctrl-s to save, prefix + Ctrl-r to restore
# sensible: provides sensible defaults
# yank: y in copy mode to copy to clipboard
# vim-tmux-navigator: Ctrl-h/j/k/l to navigate between panes and vim splits
# tmux-sessionizer (tms):
#   - prefix + Ctrl-o: Open project selector (opens in 80% size popup)
#   - prefix + Ctrl-j: Switch between sessions (opens in 80% size popup)
#   - prefix + Ctrl-p: Show current session windows (opens in 80% size popup)

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# Set tmux-sessionizer project directories
set-environment -g TMS_PROJ_DIRS "$HOME/projects:$HOME/"
